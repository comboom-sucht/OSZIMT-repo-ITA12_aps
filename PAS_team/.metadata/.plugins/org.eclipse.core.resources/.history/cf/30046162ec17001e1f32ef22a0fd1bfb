import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

public class UserManagement {
	
	private HashMap<String, String> users = new HashMap<String, String>();
	private File  filename = new File("um.oszuser");
	private String password = "v$Eez6!BX&cA3ZJ%Ztw87%MwbpbsAkjz2PaECW&grSq@DGBHisgjJwC@Kq@R4Ufz";
	
	public UserManagement() {
		loadUsers();
	}
	
	public void addUser(String username, String password) {
		users.put(username, password);
		saveUsers();
	}
	
	public void removeUser(String username) {
		users.remove(username);
		saveUsers();
	}
	
	public boolean userExists(String username, String password) {
		return users.get(username).equals(password);
	}
	
	private void loadUsers() {
		try {
			byte[] encryptedData = FileHandler.readFile(filename);
			String decryptedText = SecureEnclave.decrypt(password, encryptedData);
			// Deserialize the decrypted text into a HashMap
			users = deserializeUsers(decryptedText);
		} catch (IOException e) {
			// Handle file read error
			e.printStackTrace();
		} catch (SecurityException e) {
			// Handle decryption error
			e.printStackTrace();
		}
	}
	
	private void saveUsers() {
		// Serialize the users HashMap into a string
		String serializedUsers = serializeUsers(users);
		// Encrypt the serialized users data
		byte[] encryptedData = SecureEnclave.encrypt(password, serializedUsers);
		try {
			FileHandler.writeFile(filename, encryptedData);
		} catch (IOException e) {
			// Handle file write error
			e.printStackTrace();
		}
	}
	
	private String serializeUsers(HashMap<String, String> users) {
	    Gson gson = new Gson();
	    return gson.toJson(users);
	}
	
	private HashMap<String, String> deserializeUsers(String serializedUsers) {
	    Gson gson = new Gson();
	    return gson.fromJson(serializedUsers, new TypeToken<HashMap<String, String>>(){}.getType());
	}
}

