import { AbstractElement } from "../AbstractElement";
/**
 * Page object for the Debugger Toolbar
 */
export declare class DebugToolbar extends AbstractElement {
    constructor();
    /**
     * Wait for the debug toolbar to appear and instantiate it.
     * Assumes that debug session is already starting and it is just
     * a matter of waiting for the toolbar to appear.
     *
     * @param timeout max time to wait in milliseconds, default 5000
     */
    static create(timeout?: number): Promise<DebugToolbar>;
    /**
     * Wait for the execution to pause at the next breakpoint
     */
    waitForBreakPoint(): Promise<void>;
    /**
     * Click Continue
     */
    continue(): Promise<void>;
    /**
     * Click Pause
     */
    pause(): Promise<void>;
    /**
     * Click Step Over
     */
    stepOver(): Promise<void>;
    /**
     * Click Step Into
     */
    stepInto(): Promise<void>;
    /**
     * Click Step Out
     */
    stepOut(): Promise<void>;
    /**
     * Click Restart
     */
    restart(): Promise<void>;
    /**
     * Click Stop
     */
    stop(): Promise<void>;
    private getButton;
}
