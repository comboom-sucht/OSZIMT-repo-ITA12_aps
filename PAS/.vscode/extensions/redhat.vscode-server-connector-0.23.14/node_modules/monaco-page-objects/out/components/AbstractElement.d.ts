import { WebElement, WebDriver, Locator } from "selenium-webdriver";
import { Locators } from "../locators/locators";
/**
 * Default wrapper for webelement
 */
export declare abstract class AbstractElement extends WebElement {
    static ctlKey: string;
    protected static driver: WebDriver;
    protected static locators: Locators;
    protected static versionInfo: {
        version: string;
        browser: string;
    };
    protected enclosingItem: WebElement;
    /**
     * Constructs a new element from a Locator or an existing WebElement
     * @param base WebDriver compatible Locator for the given element or a reference to an existing WeBelement
     * @param enclosingItem Locator or a WebElement reference to an element containing the element being constructed
     * this will be used to narrow down the search for the underlying DOM element
     */
    constructor(base: Locator | WebElement, enclosingItem?: WebElement | Locator);
    /**
     * Wait for the element to become visible
     * @param timeout custom timeout for the wait
     * @returns thenable self reference
     */
    wait(timeout?: number): Promise<this>;
    /**
     * Return a reference to the WebElement containing this element
     */
    getEnclosingElement(): WebElement;
    static init(locators: Locators, driver: WebDriver, browser: string, version: string): void;
}
