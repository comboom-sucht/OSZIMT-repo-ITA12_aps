"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiffEditor = void 0;
const Editor_1 = require("./Editor");
const TextEditor_1 = require("./TextEditor");
const EditorView_1 = require("./EditorView");
/**
 * Page object representing a diff editor
 */
class DiffEditor extends Editor_1.Editor {
    /**
     * Gets the text editor corresponding to the originalside.
     * (The left side of the diff editor)
     * @returns Promise resolving to TextEditor object
     */
    getOriginalEditor() {
        return __awaiter(this, void 0, void 0, function* () {
            const element = yield this.getEnclosingElement().findElement(DiffEditor.locators.DiffEditor.originalEditor);
            return new TextEditor_1.TextEditor(new EditorView_1.EditorView(), element);
        });
    }
    /**
     * Gets the text editor corresponding to the modified side.
     * (The right side of the diff editor)
     * @returns Promise resolving to TextEditor object
     */
    getModifiedEditor() {
        return __awaiter(this, void 0, void 0, function* () {
            const element = yield this.getEnclosingElement().findElement(DiffEditor.locators.DiffEditor.modifiedEditor);
            return new TextEditor_1.TextEditor(new EditorView_1.EditorView(), element);
        });
    }
}
exports.DiffEditor = DiffEditor;
//# sourceMappingURL=DiffEditor.js.map